variable "product" {
  type        = string
  description = "Environment name(e.g. common)."
}

variable "use_identifier_prefix" {
  description = "Determines whether to use `identifier` as is or create a unique identifier beginning with `identifier` as the specified prefix."
  type        = bool
  default     = false
}

variable "identifier" {
  description = "The name of the RDS instance."
  type        = string
  default     = ""
}

variable "family" {
  description = "The family of the DB parameter group."
  type        = string
  default     = null
}

variable "parameters" {
  description = "A list of DB parameter maps to apply."
  type        = list(map(string))
  default     = []
}

variable "subscription_name" {
  description = "The name of the DB event subscription. By default generated by Terraform."
  type        = string
  default     = null
}

variable "sns_topic" {
  description = "The SNS topic to send events to."
  type        = string
  default     = null
}

variable "source_type" {
  description = "The type of source that will be generating the events."
  type        = string
  default     = null
}

variable "source_ids" {
  description = "A list of identifiers of the event sources for which events will be returned."
  type        = list(string)
  default     = []
}

variable "event_categories" {
  description = "A list of event categories for a SourceType that you want to subscribe to."
  type        = list(string)
  default     = []
}

variable "subnet_ids" {
  description = "A list of VPC subnet IDs."
  type        = list(string)
  default     = []
}

variable "engine" {
  description = "The database engine to use."
  type        = string
  default     = null
}

variable "engine_version" {
  description = "The engine version to use."
  type        = string
  default     = null
}

variable "instance_class" {
  description = "The instance type of the RDS instance."
  type        = string
  default     = null
}

variable "allocated_storage" {
  description = "The allocated storage in gigabytes."
  type        = string
  default     = null
}

variable "max_allocated_storage" {
  description = "Specifies the value for Storage Autoscaling."
  type        = number
  default     = 0
}

variable "storage_type" {
  description = "One of 'standard' (magnetic), 'gp2' (general purpose SSD), or 'io1' (provisioned IOPS SSD). The default is 'io1' if iops is specified, 'standard' if not. Note that this behaviour is different from the AWS web console, where the default is 'gp2'."
  type        = string
  default     = null
}

variable "storage_encrypted" {
  description = "Specifies whether the DB instance is encrypted."
  type        = bool
  default     = true
}

variable "kms_key_id" {
  description = "The ARN for the KMS encryption key. If creating an encrypted replica, set this to the destination KMS ARN. If storage_encrypted is set to true and kms_key_id is not specified the default KMS key created in your account will be used."
  type        = string
  default     = null
}

variable "db_name" {
  description = "The DB name to create. If omitted, no database is created initially."
  type        = string
  default     = null
}

variable "username" {
  description = "Username for the master DB user."
  type        = string
  default     = null
}

variable "port" {
  default     = 5432
  description = "Port the database should listen on."
  type        = number
}

variable "security_group_ids" {
  description = "A list of security group IDs."
  type        = list(string)
  default     = []
}

variable "multi_az" {
  description = "Specifies if the RDS instance is multi-AZ."
  type        = bool
  default     = false
}

variable "publicly_accessible" {
  description = "Bool to control if instance is publicly accessible."
  type        = bool
  default     = false
}

variable "allow_major_version_upgrade" {
  description = "Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible."
  type        = bool
  default     = false
}

variable "auto_minor_version_upgrade" {
  description = "Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window."
  type        = bool
  default     = true
}

variable "apply_immediately" {
  description = "Specifies whether any database modifications are applied immediately, or during the next maintenance window"
  type        = bool
  default     = false
}

variable "maintenance_window" {
  description = "The window to perform maintenance in. Syntax: 'ddd:hh24:mi-ddd:hh24:mi'. Eg: 'Mon:00:00-Mon:03:00'."
  type        = string
  default     = null
}

variable "copy_tags_to_snapshot" {
  description = "On delete, copy all Instance tags to the final snapshot."
  type        = bool
  default     = false
}

variable "backup_window" {
  description = "The daily time range (in UTC) during which automated backups are created if they are enabled. Example: '09:46-10:16'. Must not overlap with maintenance_window."
  type        = string
  default     = null
}

variable "backup_retention_period" {
  description = "The days to retain backups for."
  type        = number
  default     = null
}

variable "enabled_cloudwatch_logs_exports" {
  description = "List of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. Valid values (depending on engine): alert, audit, error, general, listener, slowquery, trace, postgresql (PostgreSQL), upgrade (PostgreSQL)."
  type        = list(string)
  default     = []
}

variable "deletion_protection" {
  description = "The database can't be deleted when this value is set to true."
  type        = bool
  default     = false
}

variable "create_cloudwatch_log_group" {
  description = "Determines whether a CloudWatch log group is created for each `enabled_cloudwatch_logs_exports`."
  type        = bool
  default     = false
}

variable "cloudwatch_log_group_retention_in_days" {
  description = "The number of days to retain CloudWatch logs for the DB instance."
  type        = number
  default     = 7
}

variable "cloudwatch_log_group_kms_key_id" {
  description = "The ARN of the KMS Key to use when encrypting log data"
  type        = string
  default     = null
}

variable "timeouts" {
  description = "Updated Terraform resource management timeouts. Applies to `aws_db_instance` in particular to permit resource management times."
  type        = map(string)
  default     = {}
}

variable "skip_final_snapshot" {
  type        = bool
  default     = false
  description = "determine whether skip_final_snapshot should be added or not"
}

variable "final_snapshot_identifier" {
  type        = string
  description = "value fo the final identifier"
}

variable "cert_identifier" {
  type        = string
  description = "Certificate Authority for RDS"
  default     = "rds-ca-rsa2048-g1"
}
